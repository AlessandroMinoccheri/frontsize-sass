@function scaleValue($value, $scale) {
    @return round($value * $scale);
}

/// Returns the product of theme config's global var `$spacing` with the integer passed
/// @author <a href="http://twitter.com/vttrx">Vittorio Vittori</a>
/// @group Frontsize functions
/// @access public
/// @param {int} $multiplier [1] - The multiplier for theme config's global var `$spacing`
/// @example scss The default value of spacing pamameter si `1`
///   .selector {
///       padding-top: spacing(2);
///   }
/// @example css CSS generated if `$spacing` is `15px`
///   .selector {
///       padding-top: 30px;
///   }

@function spacing($multiplier:1) {
    @return round($spacing * $multiplier);
}

/// Alias for `spacing` function to a lesser verbose usage
/// @author <a href="http://twitter.com/vttrx">Vittorio Vittori</a>
/// @group Frontsize functions
/// @access public
/// @param {int} $multiplier [1] - The multiplier for theme config's global var `$spacing`
/// @example scss The default value of spacing pamameter si `1`
///   .selector {
///       padding-top: s(2);
///   }
/// @example css CSS generated if `$spacing` is `15px`
///   .selector {
///       padding-top: 30px;
///   }

@function s($scale:1, $value:false) {
    @if $value == false {
        @return spacing($scale);
    } @else {
        @return scaleValue($value, $scale);
    }
}

@function _values($value) {
    @if $use-css-prefix == true {
        @if $value == "filter" {
            @return "filter" "-webkit-filter";
        } @elseif $value == "transform" {
            @return "transform" "-webkit-transform";
        } @elseif $value == "box-shadow" {
            @return "box-shadow" "-webkit-box-shadow" "-khtml-box-shadow" "-moz-box-shadow" "-ms-box-shadow" "-0-box-shadow";
        } @else {
            @return $value;
        }
    } @else {
        @return $value;
    }
}
