@media #{$display-retina} {
    .not-retina-only {
        display:none;
    }
}

@media #{$display-standard} {
    .retina-only {
        display:none;
    }
}

@mixin addViewportsSteps($selector:use-steps, $hdFullMargin:500px, $hdReadyMargin:100px, $tabletLandscapeMargin:50px, $tabletPortraitMargin:20px, $width:false) {
	// Media queries for selectors active from a specific resolution or higher
	// smartphone viewports were removed to improve width compatibility with all smartphone models
	@if $width == false {
		@include addStep($selector);
		@if ($use-tablet-portrait == true){
			@media #{$from-tablet-portrait} {
				// Tablet portrait
				.#{$selector} {
					max-width: ($tablet-portrait-step - $tabletPortraitMargin);
				}
			}
		}

		@if ($use-tablet-landscape == true){
			@media #{$from-tablet-landscape} {
				// Tablet landscape
				.#{$selector} {
					max-width: ($tablet-landscape-step - $tabletLandscapeMargin);
				}
			}
		}

		@if ($use-hd-ready == true){
			@media #{$from-hd-ready} {
				// HD Ready
				.#{$selector} {
					max-width: ($hd-ready-step - $hdReadyMargin);
				}
			}
		}

		@if ($use-hd-full == true){
			@media #{$from-hd-full} {
				// Full HD
				.#{$selector} {
					max-width: ($hd-full-step - $hdFullMargin);
				}
			}
		}
	}
	@else {
		@include addStep($selector, $width);
	}
}

@mixin addContainerRow($selector:row, $hdFullSteps:0, $hdReadySteps:12, $tabletLandscapeSteps:6, $tabletPortraitSteps:3, $smartphoneLandscapeSteps:1, $smartphonePortraitSteps:1) {
	.#{$selector},
	.#{$selector} *,
	.#{$selector} > * {
		@include box-sizing(border-box);
	}
	.#{$selector}{
		padding-top:$vertical-padding;
		width:100%;
		overflow:auto;
		clear:both;
	}
	@include checkAutoClear($hdFullSteps, $hdReadySteps, $tabletLandscapeSteps, $tabletPortraitSteps, $smartphoneLandscapeSteps, $smartphonePortraitSteps, $selector);
}

@mixin checkAutoClear($hdFullSteps, $hdReadySteps, $tabletLandscapeSteps, $tabletPortraitSteps, $smartphoneLandscapeSteps, $smartphonePortraitSteps, $selector){
	 @if $hdFullSteps > 0 {
		// Media queries for selectors active from a specific resolution or higher
		.#{$selector} > * {
			min-height: 1px;
			//padding-bottom:@vertical-padding;
			@include setColumnBehavior();
			@include setColumnStep(1, $hdFullSteps);
		}
		@if ($use-smartphone-portrait == true){
			@media #{$only-smartphone-portrait} {
				// Smartphone portrait
				.#{$selector} > * {
					@include setColumns($smartphonePortraitSteps);
				}
			}
		}

		@if ($use-smartphone-landscape == true){
			@media #{$only-smartphone-landscape} {
				// Smartphone landscape
				.#{$selector} > * {
					@include setColumns($smartphoneLandscapeSteps);
				}
			}
		}

		@if ($use-tablet-portrait == true){
			@media #{$only-tablet-portrait} {
				// Tablet portrait
				.#{$selector} > * {
					@include setColumns($tabletPortraitSteps);
				}
			}
		}

		@if ($use-tablet-landscape == true){
			@media #{$only-tablet-landscape} {
				// Tablet landscape
				.#{$selector} > * {
					@include setColumns($tabletLandscapeSteps);
				}
			}
		}

		@if ($use-hd-ready == true){
			@media #{$only-hd-ready} {
				// HD Ready
				.#{$selector} > * {
					@include setColumns($hdReadySteps);
				}
			}
		}

		@if ($use-hd-full == true){
			@media #{$only-hd-full} {
				// Full HD
				.#{$selector} > * {
					@include setColumns($hdFullSteps);
				}
			}
		}
	}
}

@mixin addColumnsSet($hdSteps:12, $tabletSteps:$hdSteps, $smartphoneSteps:$tabletSteps, $hdViewportPrefix:hd-, $tabletViewportPrefix:tablet-, $smartphoneViewportPrefix:smartphone-, $fillFromViewport:"smartphone-landscape", $viewTotalColumns:true, $columnsSeparator:-of-, $useHdRules:true, $useTabletRules:true, $useSmartphoneRules:true) {

    @media #{$from-smartphone-portrait} {
        // Smartphone portrait
        @include addColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($smartphoneViewportPrefix, $smartphoneSteps, $viewTotalColumns, $columnsSeparator);
    }

    @media #{$from-tablet-portrait} {
        // Tablet portrait
        @include addColumnSet($smartphoneViewportPrefix, $smartphoneSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);
    }

    @media #{$from-hd-ready} {
        // HD Ready
        @include addColumnSet($smartphoneViewportPrefix, $smartphoneSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($tabletViewportPrefix, $tabletSteps, $viewTotalColumns, $columnsSeparator);
        @include addColumnSet($hdViewportPrefix, $hdSteps, $viewTotalColumns, $columnsSeparator);
    }

    @include addFillToColumnSet($tabletViewportPrefix, $tabletSteps, $fillFromViewport, $viewTotalColumns, $columnsSeparator);
    @include addFillToColumnSet($hdViewportPrefix, $hdSteps, $fillFromViewport, $viewTotalColumns, $columnsSeparator);
    @include preventSmartphoneColumnSet($smartphoneViewportPrefix, $smartphoneSteps, $viewTotalColumns, $columnsSeparator);
}

@mixin addMarginOffset($steps:12, $hdViewportPrefix:hd-offset-, $tabletViewportPrefix:tablet-offset-, $smartphoneViewportPrefix:smartphone-offset-, $fillFromViewport:"smartphone-landscape", $viewTotalColumns:true, $columnsSeparator:-of-, $useHdRules:true, $useTabletRules:true, $useSmartphoneRules:true) {
    @include addMarginOffsetSmartphonePortrait($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useSmartphoneRules);
    @include addMarginOffsetTabletPortrait($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useTabletRules);
    @include addMarginOffsetHdReady($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useHdRules);
}

/* private */@mixin addMarginOffsetSmartphonePortrait($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useSmartphoneRules) {
	@if $useSmartphoneRules == true {
	    @media #{$from-smartphone-portrait} {
	        // Smartphone portrait
	        @include addColumnMarginOffset($hdViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($tabletViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($smartphoneViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	    }
	}
}
/* private */@mixin addMarginOffsetTabletPortrait($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useTabletRules) {
	@if $useTabletRules == true {
	    @media #{$from-tablet-portrait} {
	        // Tablet portrait
	        @include addColumnMarginOffset($smartphoneViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($hdViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($tabletViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	    }
	}
}
/* private */@mixin addMarginOffsetHdReady($steps, $hdViewportPrefix, $tabletViewportPrefix, $smartphoneViewportPrefix, $viewTotalColumns, $columnsSeparator, $useHdRules) {
	@if $useHdRules == true {
	    @media #{$from-hd-ready} {
	        // HD Ready
	        @include addColumnMarginOffset($smartphoneViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($tabletViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	        @include addColumnMarginOffset($hdViewportPrefix, $steps, $viewTotalColumns, $columnsSeparator);
	    }
	}
}
